plugins {
    id 'com.gradle.plugin-publish' version '1.1.0'
    id 'idea'
}

group 'ru.krasnov.jetbrains'
version '1.0.0'

publishing {
    repositories {
        mavenLocal()
    }
}

repositories {
    mavenCentral()
}


def functionalTest = sourceSets.create("functionalTest")

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'ru.krasnov.jetbrains.tracking-plugin'
            displayName = 'Plugin for tracking tasks'
            description = 'This plugin provides functionality for tracking execution gradle tasks'
            implementationClass = 'ru.krasnov.jetbrains.plugin.TrackingPlugin'
        }
    }
    testSourceSets(functionalTest)
}

def integrationTest = sourceSets.create("integrationTest")

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'

    testImplementation 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.mapstruct:mapstruct:1.5.3.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    integrationTestImplementation(project)
    integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    integrationTestImplementation 'org.mockito:mockito-all:1.8.4'

    testImplementation gradleTestKit()
    functionalTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    functionalTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    functionalTestImplementation 'org.mockito:mockito-all:1.8.4'
}

def integrationTestTask = tasks.register("integrationTest", Test) {
    description = 'Runs the integration tests.'
    group = "verification"
    testClassesDirs = integrationTest.output.classesDirs
    classpath = integrationTest.runtimeClasspath
    mustRunAfter(tasks.named('test'))
}

def functionalTestTask = tasks.register("functionalTest", Test) {
    description = 'Runs the functional tests.'
    group = "verification"
    testClassesDirs = functionalTest.output.classesDirs
    classpath = functionalTest.runtimeClasspath
    mustRunAfter(tasks.named('integrationTest'))
}

tasks.named('check') {
    dependsOn(integrationTestTask)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}